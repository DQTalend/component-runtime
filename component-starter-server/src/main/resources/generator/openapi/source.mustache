package {{packageName}}.source;

import java.io.Serializable;

import javax.json.JsonObject;
import org.talend.sdk.component.api.record.Record;
import org.talend.components.common.stream.input.json.JsonToRecord;

import org.talend.sdk.component.api.component.Icon;
import org.talend.sdk.component.api.component.Version;
import org.talend.sdk.component.api.configuration.Option;
import org.talend.sdk.component.api.input.Emitter;
import org.talend.sdk.component.api.input.Producer;
import org.talend.sdk.component.api.meta.Documentation;
import org.talend.sdk.component.api.service.Service;
import org.talend.sdk.component.api.service.record.RecordBuilderFactory;

import {{packageName}}.client.APIClient;
import {{packageName}}.dataset.APIDataSet;

@Version
@Icon(value = Icon.IconType.CUSTOM, custom = "openapi")
@Emitter(name = "Source")
@Documentation("A source emitting the result of the configured called.")
public class APISource implements Serializable {
    private final APIConfiguration configuration;
    private final APIClient client;

    @Service
    private RecordBuilderFactory recordBuilderFactory;

    private boolean called = false;

    public APISource(@Option final APIConfiguration configuration, final APIClient client, final RecordBuilderFactory recordBuilderFactory) {
        this.configuration = configuration;
        this.client = client;
        this.recordBuilderFactory = recordBuilderFactory;
    }

    @Producer
    public Record data() {
        if (called) {
            return null;
        }
        called = true;
        final APIDataSet dataset = configuration.getDataSet();
        JsonObject json = dataset.getAPI().call(dataset, client).body();
        final JsonToRecord jsonToRecord = new JsonToRecord(recordBuilderFactory, true);
        return jsonToRecord.toRecord(json);
    }
}
