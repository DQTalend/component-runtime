{
  "component_name": "<0><0>Each component has a name which must be unique into a family.</0><1><0></0> The name must be a valid java name (no space, special characters, ...).</1></0>",
  "component_name_title": "Component Name",
  "component_type": "<0><0>Talend Component Kit supports two types of components:<1><0>Input: it is a component creating records from itself. It only supports to create a main output branch of records.</0><1>Processor: this component type can read from 1 or multiple inputs the data, process them and create 0 or multiple outputs.</1></1></0></0>",
  "component_type_title": "Component Type",
  "facets_values": "<0><0>Selecting a facet allows you to adds some features to your generated project.</0><1>A common use case is to activate the testing facet to have skeletons for tests.</1></0>",
  "facets_values_title": "Facets",
  "mapper_configuration": "<0><0>The component configuration schema design can be configured by clicking on this button.</0><1>It allows you to define the data you need to be able to execute the component logic.</1></0>",
  "mapper_configuration_title": "Configuration",
  "mapper.record_type": "<0><0>The input will issue some records.</0><1>This configuration allows you to either define the schema of the records or to use a generic record type you will implement if the data structure can vary depending the component configuration.</1></0>",
  "mapper_record_type_title": "Record",
  "mapper_stream": "<0><0>Activate this toggle if your input will issue a stream.</0><1>It means that there is no real \"end\" of the data and that the job/pipeline using this component is not intended to be terminated.</1></0>",
  "mapper_stream_title": "Stream",
  "processor_configuration": "<0><0>The component configuration schema design can be configured by clicking on this button.</0><1>It allows you to define the data you need to be able to execute the component logic.</1></0>",
  "processor_configuration_title": "Configuration",
  "processor_connectivity": "<0><0>This section allows you to configure the processor connectivity.</0><1>Click on <1></1> buttons to add inputs/outputs and the <3></3> to remove one.</1><2>Clicking on an input/output branch you can edit its specification (name, type).</2></0>",
  "processor_connectivity_title": "Connectivity",
  "processor_inputs": "<0><0>Clicking on this button you add an input to the processor.</0><1><0></0> <2>MAIN</2> input is mandatory.</1></0>",
  "processor_inputs_title": "Inputs",
  "processor_outputs": "<0><0>Clicking on this button you add an output to the processor.</0></0>",
  "processor_outputs_title": "Outputs",
  "project_artifact": "<0><0>The project artifact used when deployed on a repository (like a Nexus or central).</0><1>It must be a unique identifier in the group namespace.</1><2>Talend recommendation is to follow the pattern <1>${component}-component</1> but you can use whatever you want.</2></0>",
  "project_artifact_title": "Project Artifact",
  "project_build_tool": "<0><0>Maven is the most commonly used build tool and Talend Component Kit integrates with it smoothly.</0><1>Gradle is less used but get more and more attraction because it is communicated as being faster than Maven.</1><2><0></0> Talend Component Kit does not provide as much features with Gradle than with Maven. The components validation is not yet supported for instance.</2></0>",
  "project_build_tool_title": "Build Tool",
  "project_category": "<0><0>The category is a group used by the Studio to organize components of different families in the same bucket into the <1>Palette</1>.</0><1>It is recommended to use a two level category. The first level is generally very general and the second one is close to the family name.</1><2></2> The names must be valid java names (no space, special characters, ...).</0>",
  "project_category_title": "Category",
  "project_family": "<0><0>The family groups multiple components altogether.</0><1><0></0> It is recommended to use a single family name per component module. The name must be a valid java name (no space, special characters, ...).</1></0>",
  "project_family_title": "Family",
  "project_group": "<0><0>The project group used when deployed on a repository (like a Nexus or central).</0><1>The best practice recommends to use the reversed company hostname suffixed with something specific to the project.</1><2>Example: <1>company.com</1> would lead to <3>com.company</3> package and for a component the used package would be, for instance, <5>com.company.talend.component</5>.</2></0>",
  "project_group_title": "Project Group",
  "project_package": "<0><0>The root package represents a unique namespace in term of code.</0><1>Talend recommendation is to align it on the selected group.</1></0>",
  "project_package_title": "Project Root package",
  "schema_designing_model": "<0><0>This view allows you to modelize your model.</0><1>You can click on the <1></1> to add an object field, on the <3></3> to delete one and on any field to edit its name and type.</1><2>To add a nested object just add a field, click on it, customize its name and select the type object into the select box then valid your updates.</2><3><0></0> The field names must be a valid java name (no space, special characters, ...). If the field name contains some specific keywords it will be considered as a credential and marked as such (for instance <2>password</2>, <4>token</4>, ...);</3></0>",
  "schema_designing_model_title": "Designing your model"
}
