<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2006-2020 Talend Inc. - www.talend.com
   Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.talend.sdk.component</groupId>
    <artifactId>images</artifactId>
    <version>1.1.20-SNAPSHOT</version>
  </parent>

  <artifactId>component-server-vault-proxy-image</artifactId>

  <name>Component Runtime :: Images :: Server Vault Proxy</name>

  <properties>
    <boundPort>9090</boundPort>
    <imageWorkDir>${baseImageDir}/component-kit-vault-proxy</imageWorkDir>
    <image.currentVersion>
      ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}_${maven.build.timestamp}
    </image.currentVersion>
    <tsbi.product>component-kit-vault-proxy</tsbi.product>
    <tsbi.service>component-server-vault-proxy</tsbi.service>
    <image.tag>${project.version}</image.tag>
    <image.target>talend/common/tacokit/component-server-vault-proxy</image.target>
    <talend.server.image.name>${talend.server.image.registry}tacokit/component-server-vault-proxy:${image.currentVersion}</talend.server.image.name>
    <additionalDockerFiles>${project.build.outputDirectory}/docker/additional</additionalDockerFiles>
    <talend.build.name>${talend.build.name.base}.vault.proxy.image</talend.build.name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.talend.sdk.component</groupId>
      <artifactId>component-server-vault-proxy</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- for prod/monitoring -->
    <dependency>
      <groupId>org.apache.geronimo</groupId>
      <artifactId>docker-configsource</artifactId>
      <version>${geronimo-microprofile.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo</groupId>
      <artifactId>secured-string-converter</artifactId>
      <version>${geronimo-microprofile.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.microprofile.metrics</groupId>
      <artifactId>microprofile-metrics-api</artifactId>
      <version>${microprofile-metrics-api.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.osgi</groupId>
          <artifactId>org.osgi.annotation.versioning</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo</groupId>
      <artifactId>geronimo-metrics</artifactId>
      <version>${geronimo-metrics.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo</groupId>
      <artifactId>geronimo-metrics-tomcat</artifactId>
      <version>${geronimo-metrics.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.geronimo</groupId>
      <artifactId>geronimo-metrics-sigar</artifactId>
      <version>${geronimo-metrics.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${additionalDockerFiles}/conf</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.basedir}/src/main/resources</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${dependency-plugin.version}</version>
        <executions>
          <execution>
            <id>unpack-sigar</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.fusesource</groupId>
                  <artifactId>sigar</artifactId>
                  <version>1.6.4</version>
                  <classifier>native</classifier>
                  <type>jar</type>
                  <outputDirectory>${additionalDockerFiles}/sigar</outputDirectory>
                  <includes>**/libsigar-amd64-linux-1.6.4.so</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default</id>
            <phase>install</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <repository>${image.target}</repository>
          <tag>${image.tag}_${maven.build.timestamp}</tag>
          <dockerfile>Dockerfile</dockerfile>
          <buildArgs>
            <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
            <TIMESTAMP>${maven.build.timestamp}</TIMESTAMP>
            <DOCKER_REGISTRY_HOST>${docker.registryHost}</DOCKER_REGISTRY_HOST>
            <TSBI_IMAGE_PATH>${docker.tsbiPath}</TSBI_IMAGE_PATH>
            <TSBI_VERSION>${docker.tsbiVersion}</TSBI_VERSION>
            <BOUND_PORT>${boundPort}</BOUND_PORT>
            <GIT_BRANCH>${git.branch}</GIT_BRANCH>
            <GIT_COMMIT>${git.commit.id}</GIT_COMMIT>
          </buildArgs>
          <skip>${disable.dockerBuild}</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
